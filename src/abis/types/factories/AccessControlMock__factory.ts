/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccessControlMock,
  AccessControlMockInterface,
} from "../AccessControlMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "senderProtected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "adminRoleId",
        type: "bytes32",
      },
    ],
    name: "setRoleAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100316000801b61002661003660201b60201c565b61003e60201b60201c565b6101a8565b600033905090565b61004e828261005260201b60201c565b5050565b610062828261013e60201b60201c565b61013a57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506100df61003660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610ff0806101b76000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806336568abe1161006657806336568abe146101305780634b9304a41461014c57806391d1485414610168578063a217fddf14610198578063d547741f146101b657610093565b806301ffc9a7146100985780631e4e0091146100c8578063248a9ca3146100e45780632f2ff15d14610114575b600080fd5b6100b260048036038101906100ad9190610ada565b6101d2565b6040516100bf9190610ceb565b60405180910390f35b6100e260048036038101906100dd9190610a9e565b61024c565b005b6100fe60048036038101906100f99190610a39565b61025a565b60405161010b9190610d06565b60405180910390f35b61012e60048036038101906101299190610a62565b610279565b005b61014a60048036038101906101459190610a62565b6102a2565b005b61016660048036038101906101619190610a39565b610325565b005b610182600480360381019061017d9190610a62565b61033b565b60405161018f9190610ceb565b60405180910390f35b6101a06103a5565b6040516101ad9190610d06565b60405180910390f35b6101d060048036038101906101cb9190610a62565b6103ac565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102455750610244826103d5565b5b9050919050565b610256828261043f565b5050565b6000806000838152602001908152602001600020600101549050919050565b6102828261025a565b6102938161028e61049a565b6104a2565b61029d838361053f565b505050565b6102aa61049a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e90610d63565b60405180910390fd5b610321828261061f565b5050565b806103378161033261049a565b6104a2565b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b6103b58261025a565b6103c6816103c161049a565b6104a2565b6103d0838361061f565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600061044a8361025a565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b600033905090565b6104ac828261033b565b61053b576104d18173ffffffffffffffffffffffffffffffffffffffff166014610700565b6104df8360001c6020610700565b6040516020016104f0929190610cb1565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105329190610d21565b60405180910390fd5b5050565b610549828261033b565b61061b57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506105c061049a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610629828261033b565b156106fc57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506106a161049a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6060600060028360026107139190610e00565b61071d9190610daa565b67ffffffffffffffff81111561075c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561078e5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106107ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610876577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026108b69190610e00565b6108c09190610daa565b90505b60018111156109ac577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610928577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110610965577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806109a590610f0b565b90506108c3565b50600084146109f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e790610d43565b60405180910390fd5b8091505092915050565b600081359050610a0981610f75565b92915050565b600081359050610a1e81610f8c565b92915050565b600081359050610a3381610fa3565b92915050565b600060208284031215610a4b57600080fd5b6000610a5984828501610a0f565b91505092915050565b60008060408385031215610a7557600080fd5b6000610a8385828601610a0f565b9250506020610a94858286016109fa565b9150509250929050565b60008060408385031215610ab157600080fd5b6000610abf85828601610a0f565b9250506020610ad085828601610a0f565b9150509250929050565b600060208284031215610aec57600080fd5b6000610afa84828501610a24565b91505092915050565b610b0c81610e6c565b82525050565b610b1b81610e78565b82525050565b6000610b2c82610d83565b610b368185610d8e565b9350610b46818560208601610ed8565b610b4f81610f64565b840191505092915050565b6000610b6582610d83565b610b6f8185610d9f565b9350610b7f818560208601610ed8565b80840191505092915050565b6000610b98602083610d8e565b91507f537472696e67733a20686578206c656e67746820696e73756666696369656e746000830152602082019050919050565b6000610bd8601783610d9f565b91507f416363657373436f6e74726f6c3a206163636f756e74200000000000000000006000830152601782019050919050565b6000610c18601183610d9f565b91507f206973206d697373696e6720726f6c65200000000000000000000000000000006000830152601182019050919050565b6000610c58602f83610d8e565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b6000610cbc82610bcb565b9150610cc88285610b5a565b9150610cd382610c0b565b9150610cdf8284610b5a565b91508190509392505050565b6000602082019050610d006000830184610b03565b92915050565b6000602082019050610d1b6000830184610b12565b92915050565b60006020820190508181036000830152610d3b8184610b21565b905092915050565b60006020820190508181036000830152610d5c81610b8b565b9050919050565b60006020820190508181036000830152610d7c81610c4b565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610db582610ece565b9150610dc083610ece565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df557610df4610f35565b5b828201905092915050565b6000610e0b82610ece565b9150610e1683610ece565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4f57610e4e610f35565b5b828202905092915050565b6000610e6582610eae565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610ef6578082015181840152602081019050610edb565b83811115610f05576000848401525b50505050565b6000610f1682610ece565b91506000821415610f2a57610f29610f35565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b610f7e81610e5a565b8114610f8957600080fd5b50565b610f9581610e78565b8114610fa057600080fd5b50565b610fac81610e82565b8114610fb757600080fd5b5056fea2646970667358221220006492cca1af7cfd829b2f939b3434e6bcff97960a8bdf2b1992355280323e3964736f6c63430008000033";

export class AccessControlMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessControlMock> {
    return super.deploy(overrides || {}) as Promise<AccessControlMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccessControlMock {
    return super.attach(address) as AccessControlMock;
  }
  connect(signer: Signer): AccessControlMock__factory {
    return super.connect(signer) as AccessControlMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlMockInterface {
    return new utils.Interface(_abi) as AccessControlMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlMock {
    return new Contract(address, _abi, signerOrProvider) as AccessControlMock;
  }
}
