/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1271WalletMock,
  ERC1271WalletMockInterface,
} from "../ERC1271WalletMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "originalOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200130b3803806200130b833981810160405281019062000037919062000291565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200013b60201b60201c565b506200040a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200014b6200006f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001716200025160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620001ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001c19062000389565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200023d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002349062000367565b60405180910390fd5b6200024e816200007760201b60201c565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000815190506200028b81620003f0565b92915050565b600060208284031215620002a457600080fd5b6000620002b4848285016200027a565b91505092915050565b6000620002cc602683620003ab565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600062000334602083620003ab565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600060208201905081810360008301526200038281620002bd565b9050919050565b60006020820190508181036000830152620003a48162000325565b9050919050565b600082825260208201905092915050565b6000620003c982620003d0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620003fb81620003bc565b81146200040757600080fd5b50565b610ef1806200041a6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631626ba7e14610051578063715018a6146100815780638da5cb5b1461008b578063f2fde38b146100a9575b600080fd5b61006b600480360381019061006691906109ab565b6100c5565b6040516100789190610c8d565b60405180910390f35b610089610125565b005b6100936101ad565b6040516100a09190610c2d565b60405180910390f35b6100c360048036038101906100be9190610982565b6101d6565b005b60006100cf6101ad565b73ffffffffffffffffffffffffffffffffffffffff166100ef84846102ce565b73ffffffffffffffffffffffffffffffffffffffff161461011457600060e01b61011d565b631626ba7e60e01b5b905092915050565b61012d6102f5565b73ffffffffffffffffffffffffffffffffffffffff1661014b6101ad565b73ffffffffffffffffffffffffffffffffffffffff16146101a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019890610d48565b60405180910390fd5b6101ab60006102fd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101de6102f5565b73ffffffffffffffffffffffffffffffffffffffff166101fc6101ad565b73ffffffffffffffffffffffffffffffffffffffff1614610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610d48565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b990610ce8565b60405180910390fd5b6102cb816102fd565b50565b60008060006102dd85856103c1565b915091506102ea81610444565b819250505092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806041835114156104035760008060006020860151925060408601519150606086015160001a90506103f787828585610795565b9450945050505061043d565b6040835114156104345760008060208501519150604085015190506104298683836108a2565b93509350505061043d565b60006002915091505b9250929050565b6000600481111561047e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156104b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156104c257610792565b600160048111156104fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610535577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d90610ca8565b60405180910390fd5b600260048111156105b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156105e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190610cc8565b60405180910390fd5b60036004811115610664577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600481111561069d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156106de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d590610d08565b60405180910390fd5b600480811115610717577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610750577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890610d28565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156107d0576000600391509150610899565b601b8560ff16141580156107e85750601c8560ff1614155b156107fa576000600491509150610899565b60006001878787876040516000815260200160405260405161081f9493929190610c48565b6020604051602081039080840390855afa158015610841573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561089057600060019250925050610899565b80600092509250505b94509492505050565b6000806000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85169150601b8560ff1c0190506108e287828885610795565b935093505050935093915050565b60006109036108fe84610d99565b610d68565b90508281526020810184848401111561091b57600080fd5b610926848285610e4f565b509392505050565b60008135905061093d81610e8d565b92915050565b60008135905061095281610ea4565b92915050565b600082601f83011261096957600080fd5b81356109798482602086016108f0565b91505092915050565b60006020828403121561099457600080fd5b60006109a28482850161092e565b91505092915050565b600080604083850312156109be57600080fd5b60006109cc85828601610943565b925050602083013567ffffffffffffffff8111156109e957600080fd5b6109f585828601610958565b9150509250929050565b610a0881610dda565b82525050565b610a1781610dec565b82525050565b610a2681610df6565b82525050565b6000610a39601883610dc9565b91507f45434453413a20696e76616c6964207369676e617475726500000000000000006000830152602082019050919050565b6000610a79601f83610dc9565b91507f45434453413a20696e76616c6964207369676e6174757265206c656e677468006000830152602082019050919050565b6000610ab9602683610dc9565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610b1f602283610dc9565b91507f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008301527f75650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610b85602283610dc9565b91507f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008301527f75650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610beb602083610dc9565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b610c2781610e42565b82525050565b6000602082019050610c4260008301846109ff565b92915050565b6000608082019050610c5d6000830187610a0e565b610c6a6020830186610c1e565b610c776040830185610a0e565b610c846060830184610a0e565b95945050505050565b6000602082019050610ca26000830184610a1d565b92915050565b60006020820190508181036000830152610cc181610a2c565b9050919050565b60006020820190508181036000830152610ce181610a6c565b9050919050565b60006020820190508181036000830152610d0181610aac565b9050919050565b60006020820190508181036000830152610d2181610b12565b9050919050565b60006020820190508181036000830152610d4181610b78565b9050919050565b60006020820190508181036000830152610d6181610bde565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610d8f57610d8e610e5e565b5b8060405250919050565b600067ffffffffffffffff821115610db457610db3610e5e565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000610de582610e22565b9050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e9681610dda565b8114610ea157600080fd5b50565b610ead81610dec565b8114610eb857600080fd5b5056fea2646970667358221220ffec797367a94352b52f612feb682dc244012ab04d29b04fd6e7b57e89d3043e64736f6c63430008000033";

export class ERC1271WalletMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    originalOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1271WalletMock> {
    return super.deploy(
      originalOwner,
      overrides || {}
    ) as Promise<ERC1271WalletMock>;
  }
  getDeployTransaction(
    originalOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(originalOwner, overrides || {});
  }
  attach(address: string): ERC1271WalletMock {
    return super.attach(address) as ERC1271WalletMock;
  }
  connect(signer: Signer): ERC1271WalletMock__factory {
    return super.connect(signer) as ERC1271WalletMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1271WalletMockInterface {
    return new utils.Interface(_abi) as ERC1271WalletMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1271WalletMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1271WalletMock;
  }
}
