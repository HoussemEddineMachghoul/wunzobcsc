/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC165MissingData,
  ERC165MissingDataInterface,
} from "../ERC165MissingData";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b60436004803603810190603f9190605b565b6045565b005b50565b60008135905060558160ad565b92915050565b600060208284031215606c57600080fd5b60006078848285016048565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60b4816081565b811460be57600080fd5b5056fea2646970667358221220bf4116db8b0f924d2d3c49c82ef7965cc444d177119dfe9f962a6ad867dfcba564736f6c63430008000033";

export class ERC165MissingData__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC165MissingData> {
    return super.deploy(overrides || {}) as Promise<ERC165MissingData>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC165MissingData {
    return super.attach(address) as ERC165MissingData;
  }
  connect(signer: Signer): ERC165MissingData__factory {
    return super.connect(signer) as ERC165MissingData__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC165MissingDataInterface {
    return new utils.Interface(_abi) as ERC165MissingDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC165MissingData {
    return new Contract(address, _abi, signerOrProvider) as ERC165MissingData;
  }
}
