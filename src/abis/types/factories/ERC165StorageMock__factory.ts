/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC165StorageMock,
  ERC165StorageMockInterface,
} from "../ERC165StorageMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "registerInterface",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103a7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063214cdb801461006b575b600080fd5b6100556004803603810190610050919061025e565b610087565b60405161006291906102d6565b60405180910390f35b6100856004803603810190610080919061025e565b6100fe565b005b60006100928261010a565b806100f75750600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b61010781610174565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d4906102f1565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000813590506102588161035a565b92915050565b60006020828403121561027057600080fd5b600061027e84828501610249565b91505092915050565b61029081610322565b82525050565b60006102a3601c83610311565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190506102eb6000830184610287565b92915050565b6000602082019050818103600083015261030a81610296565b9050919050565b600082825260208201905092915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103638161032e565b811461036e57600080fd5b5056fea2646970667358221220e2964e51c37721dffb490becea0a70e8fb289924b577f8c0df56e5a21e76838664736f6c63430008000033";

export class ERC165StorageMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC165StorageMock> {
    return super.deploy(overrides || {}) as Promise<ERC165StorageMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC165StorageMock {
    return super.attach(address) as ERC165StorageMock;
  }
  connect(signer: Signer): ERC165StorageMock__factory {
    return super.connect(signer) as ERC165StorageMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC165StorageMockInterface {
    return new utils.Interface(_abi) as ERC165StorageMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC165StorageMock {
    return new Contract(address, _abi, signerOrProvider) as ERC165StorageMock;
  }
}
