/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20WrapperMock,
  ERC20WrapperMockInterface,
} from "../ERC20WrapperMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_underlyingToken",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002594380380620025948339818101604052810190620000379190620001e8565b828282816003908051906020019062000052929190620000af565b5080600490805190602001906200006b929190620000af565b5050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050505062000403565b828054620000bd9062000355565b90600052602060002090601f016020900481019282620000e157600085556200012d565b82601f10620000fc57805160ff19168380011785556200012d565b828001600101855582156200012d579182015b828111156200012c5782518255916020019190600101906200010f565b5b5090506200013c919062000140565b5090565b5b808211156200015b57600081600090555060010162000141565b5090565b6000620001766200017084620002a4565b62000270565b9050828152602081018484840111156200018f57600080fd5b6200019c8482856200031f565b509392505050565b600081519050620001b581620003e9565b92915050565b600082601f830112620001cd57600080fd5b8151620001df8482602086016200015f565b91505092915050565b600080600060608486031215620001fe57600080fd5b60006200020e86828701620001a4565b935050602084015167ffffffffffffffff8111156200022c57600080fd5b6200023a86828701620001bb565b925050604084015167ffffffffffffffff8111156200025857600080fd5b6200026686828701620001bb565b9150509250925092565b6000604051905081810181811067ffffffffffffffff821117156200029a5762000299620003ba565b5b8060405250919050565b600067ffffffffffffffff821115620002c257620002c1620003ba565b5b601f19601f8301169050602081019050919050565b6000620002e482620002ff565b9050919050565b6000620002f882620002d7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200033f57808201518184015260208101905062000322565b838111156200034f576000848401525b50505050565b600060028204905060018216806200036e57607f821691505b602082108114156200038557620003846200038b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003f481620002eb565b81146200040057600080fd5b50565b60805160601c61215d6200043760003960008181610454015281816105830152818161067c0152610ae8015261215d6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063313ce5671161009757806395d89b411161006657806395d89b41146102c2578063a457c2d7146102e0578063a9059cbb14610310578063dd62ed3e14610340576100f5565b8063313ce5671461022657806339509351146102445780636f307dc31461027457806370a0823114610292576100f5565b806318160ddd116100d357806318160ddd14610178578063205c28781461019657806323b872dd146101c65780632f4f21e2146101f6576100f5565b806306fdde03146100fa578063095ea7b3146101185780630cd865ec14610148575b600080fd5b610102610370565b60405161010f9190611ce1565b60405180910390f35b610132600480360381019061012d91906115f4565b610402565b60405161013f9190611cab565b60405180910390f35b610162600480360381019061015d9190611540565b610420565b60405161016f9190611ea3565b60405180910390f35b610180610432565b60405161018d9190611ea3565b60405180910390f35b6101b060048036038101906101ab91906115f4565b61043c565b6040516101bd9190611cab565b60405180910390f35b6101e060048036038101906101db91906115a5565b610484565b6040516101ed9190611cab565b60405180910390f35b610210600480360381019061020b91906115f4565b61057c565b60405161021d9190611cab565b60405180910390f35b61022e6105c5565b60405161023b9190611ebe565b60405180910390f35b61025e600480360381019061025991906115f4565b6105ce565b60405161026b9190611cab565b60405180910390f35b61027c61067a565b6040516102899190611cc6565b60405180910390f35b6102ac60048036038101906102a79190611540565b61069e565b6040516102b99190611ea3565b60405180910390f35b6102ca6106e6565b6040516102d79190611ce1565b60405180910390f35b6102fa60048036038101906102f591906115f4565b610778565b6040516103079190611cab565b60405180910390f35b61032a600480360381019061032591906115f4565b610863565b6040516103379190611cab565b60405180910390f35b61035a60048036038101906103559190611569565b610881565b6040516103679190611ea3565b60405180910390f35b60606003805461037f90612041565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab90612041565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b5050505050905090565b600061041661040f610908565b8484610910565b6001905092915050565b600061042b82610adb565b9050919050565b6000600254905090565b600061044f610449610908565b83610bae565b61047a7f00000000000000000000000000000000000000000000000000000000000000008484610d85565b6001905092915050565b6000610491848484610e0b565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104dc610908565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390611da3565b60405180910390fd5b61057085610568610908565b858403610910565b60019150509392505050565b60006105b17f00000000000000000000000000000000000000000000000000000000000000006105aa610908565b308561108c565b6105bb8383611115565b6001905092915050565b60006012905090565b60006106706105db610908565b8484600160006105e9610908565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461066b9190611f0b565b610910565b6001905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546106f590612041565b80601f016020809104026020016040519081016040528092919081815260200182805461072190612041565b801561076e5780601f106107435761010080835404028352916020019161076e565b820191906000526020600020905b81548152906001019060200180831161075157829003601f168201915b5050505050905090565b60008060016000610787610908565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b90611e63565b60405180910390fd5b61085861084f610908565b85858403610910565b600191505092915050565b6000610877610870610908565b8484610e0b565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790611e03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e790611d43565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ace9190611ea3565b60405180910390a3505050565b600080610ae6610432565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b3f9190611c30565b60206040518083038186803b158015610b5757600080fd5b505afa158015610b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8f9190611659565b610b999190611f61565b9050610ba58382611115565b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1590611dc3565b60405180910390fd5b610c2a82600083611275565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca790611d23565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610d079190611f61565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d6c9190611ea3565b60405180910390a3610d808360008461127a565b505050565b610e068363a9059cbb60e01b8484604051602401610da4929190611c82565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061127f565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7290611de3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610eeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee290611d03565b60405180910390fd5b610ef6838383611275565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7390611d63565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461100f9190611f0b565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110739190611ea3565b60405180910390a361108684848461127a565b50505050565b61110f846323b872dd60e01b8585856040516024016110ad93929190611c4b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061127f565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117c90611e83565b60405180910390fd5b61119160008383611275565b80600260008282546111a39190611f0b565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111f89190611f0b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161125d9190611ea3565b60405180910390a36112716000838361127a565b5050565b505050565b505050565b60006112e1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113469092919063ffffffff16565b905060008151111561134157808060200190518101906113019190611630565b611340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133790611e43565b60405180910390fd5b5b505050565b6060611355848460008561135e565b90509392505050565b6060824710156113a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139a90611d83565b60405180910390fd5b6113ac85611472565b6113eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e290611e23565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114149190611c19565b60006040518083038185875af1925050503d8060008114611451576040519150601f19603f3d011682016040523d82523d6000602084013e611456565b606091505b5091509150611466828286611485565b92505050949350505050565b600080823b905060008111915050919050565b60608315611495578290506114e5565b6000835111156114a85782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dc9190611ce1565b60405180910390fd5b9392505050565b6000813590506114fb816120e2565b92915050565b600081519050611510816120f9565b92915050565b60008135905061152581612110565b92915050565b60008151905061153a81612110565b92915050565b60006020828403121561155257600080fd5b6000611560848285016114ec565b91505092915050565b6000806040838503121561157c57600080fd5b600061158a858286016114ec565b925050602061159b858286016114ec565b9150509250929050565b6000806000606084860312156115ba57600080fd5b60006115c8868287016114ec565b93505060206115d9868287016114ec565b92505060406115ea86828701611516565b9150509250925092565b6000806040838503121561160757600080fd5b6000611615858286016114ec565b925050602061162685828601611516565b9150509250929050565b60006020828403121561164257600080fd5b600061165084828501611501565b91505092915050565b60006020828403121561166b57600080fd5b60006116798482850161152b565b91505092915050565b61168b81611f95565b82525050565b61169a81611fa7565b82525050565b60006116ab82611ed9565b6116b58185611eef565b93506116c581856020860161200e565b80840191505092915050565b6116da81611fea565b82525050565b60006116eb82611ee4565b6116f58185611efa565b935061170581856020860161200e565b61170e816120d1565b840191505092915050565b6000611726602383611efa565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061178c602283611efa565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006117f2602283611efa565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611858602683611efa565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118be602683611efa565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611924602883611efa565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061198a602183611efa565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006119f0602583611efa565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611a56602483611efa565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611abc601d83611efa565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6000611afc602a83611efa565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b6000611b62602583611efa565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611bc8601f83611efa565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b611c0481611fd3565b82525050565b611c1381611fdd565b82525050565b6000611c2582846116a0565b915081905092915050565b6000602082019050611c456000830184611682565b92915050565b6000606082019050611c606000830186611682565b611c6d6020830185611682565b611c7a6040830184611bfb565b949350505050565b6000604082019050611c976000830185611682565b611ca46020830184611bfb565b9392505050565b6000602082019050611cc06000830184611691565b92915050565b6000602082019050611cdb60008301846116d1565b92915050565b60006020820190508181036000830152611cfb81846116e0565b905092915050565b60006020820190508181036000830152611d1c81611719565b9050919050565b60006020820190508181036000830152611d3c8161177f565b9050919050565b60006020820190508181036000830152611d5c816117e5565b9050919050565b60006020820190508181036000830152611d7c8161184b565b9050919050565b60006020820190508181036000830152611d9c816118b1565b9050919050565b60006020820190508181036000830152611dbc81611917565b9050919050565b60006020820190508181036000830152611ddc8161197d565b9050919050565b60006020820190508181036000830152611dfc816119e3565b9050919050565b60006020820190508181036000830152611e1c81611a49565b9050919050565b60006020820190508181036000830152611e3c81611aaf565b9050919050565b60006020820190508181036000830152611e5c81611aef565b9050919050565b60006020820190508181036000830152611e7c81611b55565b9050919050565b60006020820190508181036000830152611e9c81611bbb565b9050919050565b6000602082019050611eb86000830184611bfb565b92915050565b6000602082019050611ed36000830184611c0a565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611f1682611fd3565b9150611f2183611fd3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f5657611f55612073565b5b828201905092915050565b6000611f6c82611fd3565b9150611f7783611fd3565b925082821015611f8a57611f89612073565b5b828203905092915050565b6000611fa082611fb3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611ff582611ffc565b9050919050565b600061200782611fb3565b9050919050565b60005b8381101561202c578082015181840152602081019050612011565b8381111561203b576000848401525b50505050565b6000600282049050600182168061205957607f821691505b6020821081141561206d5761206c6120a2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6120eb81611f95565b81146120f657600080fd5b50565b61210281611fa7565b811461210d57600080fd5b50565b61211981611fd3565b811461212457600080fd5b5056fea2646970667358221220c3e1fb46aa2741312cf1566ddf13fa32a89df70e7d83cc3fd142eea71775687f64736f6c63430008000033";

export class ERC20WrapperMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _underlyingToken: string,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20WrapperMock> {
    return super.deploy(
      _underlyingToken,
      name,
      symbol,
      overrides || {}
    ) as Promise<ERC20WrapperMock>;
  }
  getDeployTransaction(
    _underlyingToken: string,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _underlyingToken,
      name,
      symbol,
      overrides || {}
    );
  }
  attach(address: string): ERC20WrapperMock {
    return super.attach(address) as ERC20WrapperMock;
  }
  connect(signer: Signer): ERC20WrapperMock__factory {
    return super.connect(signer) as ERC20WrapperMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20WrapperMockInterface {
    return new utils.Interface(_abi) as ERC20WrapperMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20WrapperMock {
    return new Contract(address, _abi, signerOrProvider) as ERC20WrapperMock;
  }
}
