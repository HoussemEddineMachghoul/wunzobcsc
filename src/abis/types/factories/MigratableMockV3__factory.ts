/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MigratableMockV3,
  MigratableMockV3Interface,
} from "../MigratableMockV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "anotherValue",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "x",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "y",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103fc806100206000396000f3fe60806040526004361061004a5760003560e01c80630c55699c1461004f5780633e54bacb1461007a5780638fd3ab8014610096578063a56dfe4a146100a0578063fe4b84df146100cb575b600080fd5b34801561005b57600080fd5b506100646100e7565b6040516100719190610379565b60405180910390f35b610094600480360381019061008f91906102a8565b6100ed565b005b61009e610134565b005b3480156100ac57600080fd5b506100b5610183565b6040516100c29190610379565b60405180910390f35b6100e560048036038101906100e0919061027f565b610189565b005b60015481565b600260009054906101000a900460ff161561010757600080fd5b81600181905550806003819055506001600260006101000a81548160ff0219169083151502179055505050565b600460009054906101000a900460ff161561014e57600080fd5b60006001549050600354600181905550806003819055506001600460006101000a81548160ff02191690831515021790555050565b60035481565b600060019054906101000a900460ff16806101af575060008054906101000a900460ff16155b6101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e590610359565b60405180910390fd5b60008060019054906101000a900460ff16159050801561023e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8160018190555080156102665760008060016101000a81548160ff0219169083151502179055505b5050565b600081359050610279816103af565b92915050565b60006020828403121561029157600080fd5b600061029f8482850161026a565b91505092915050565b600080604083850312156102bb57600080fd5b60006102c98582860161026a565b92505060206102da8582860161026a565b9150509250929050565b60006102f1602e83610394565b91507f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008301527f647920696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b610353816103a5565b82525050565b60006020820190508181036000830152610372816102e4565b9050919050565b600060208201905061038e600083018461034a565b92915050565b600082825260208201905092915050565b6000819050919050565b6103b8816103a5565b81146103c357600080fd5b5056fea2646970667358221220e11a0e2b114fc127d30b22dd72448a565937eb0802efc729017447d0d001bcc164736f6c63430008000033";

export class MigratableMockV3__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MigratableMockV3> {
    return super.deploy(overrides || {}) as Promise<MigratableMockV3>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MigratableMockV3 {
    return super.attach(address) as MigratableMockV3;
  }
  connect(signer: Signer): MigratableMockV3__factory {
    return super.connect(signer) as MigratableMockV3__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MigratableMockV3Interface {
    return new utils.Interface(_abi) as MigratableMockV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MigratableMockV3 {
    return new Contract(address, _abi, signerOrProvider) as MigratableMockV3;
  }
}
