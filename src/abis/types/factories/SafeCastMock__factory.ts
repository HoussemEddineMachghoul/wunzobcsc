/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SafeCastMock, SafeCastMockInterface } from "../SafeCastMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
    ],
    name: "toInt128",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
    ],
    name: "toInt16",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "toInt256",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
    ],
    name: "toInt32",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
    ],
    name: "toInt64",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
    ],
    name: "toInt8",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "toUint128",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "toUint16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "toUint224",
    outputs: [
      {
        internalType: "uint224",
        name: "",
        type: "uint224",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
    ],
    name: "toUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "toUint32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "toUint64",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "toUint8",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "toUint96",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061130c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063c81932551161008c578063dd2a031611610066578063dd2a0316146102cf578063dfbe873b146102ff578063f136dc021461032f578063fdcf791b1461035f576100ea565b8063c81932551461023f578063cf65b4d31461026f578063d6bd32aa1461029f576100ea565b80635bb79860116100c85780635bb798601461017f578063809fdd33146101af5780639374068f146101df5780639c6f59be1461020f576100ea565b80630cc4681e146100ef5780631cf887fc1461011f5780632665fad01461014f575b600080fd5b61010960048036038101906101049190610aa2565b61038f565b6040516101169190611171565b60405180910390f35b61013960048036038101906101349190610aa2565b6103a1565b604051610146919061118c565b60405180910390f35b61016960048036038101906101649190610aa2565b6103b3565b6040516101769190611156565b60405180910390f35b61019960048036038101906101949190610aa2565b6103c5565b6040516101a69190611105565b60405180910390f35b6101c960048036038101906101c49190610aa2565b6103d7565b6040516101d691906110cf565b60405180910390f35b6101f960048036038101906101f49190610aa2565b6103e9565b60405161020691906110ea565b60405180910390f35b61022960048036038101906102249190610a79565b6103fb565b6040516102369190610f5e565b60405180910390f35b61025960048036038101906102549190610aa2565b61040d565b604051610266919061113b565b60405180910390f35b61028960048036038101906102849190610a79565b61041f565b6040516102969190610f28565b60405180910390f35b6102b960048036038101906102b49190610a79565b610431565b6040516102c69190610f79565b60405180910390f35b6102e960048036038101906102e49190610a79565b610443565b6040516102f69190610f0d565b60405180910390f35b61031960048036038101906103149190610aa2565b610455565b6040516103269190610f43565b60405180910390f35b61034960048036038101906103449190610a79565b610467565b6040516103569190610f94565b60405180910390f35b61037960048036038101906103749190610a79565b610479565b6040516103869190611120565b60405180910390f35b600061039a8261048b565b9050919050565b60006103ac826104db565b9050919050565b60006103be82610536565b9050919050565b60006103d08261058d565b9050919050565b60006103e2826105f8565b9050919050565b60006103f482610657565b9050919050565b6000610406826106a8565b9050919050565b60006104188261072b565b9050919050565b600061042a8261077e565b9050919050565b600061043c826107ff565b9050919050565b600061044e82610886565b9050919050565b600061046082610915565b9050919050565b600061047282610982565b9050919050565b600061048482610a02565b9050919050565b600060ff80168211156104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca90610fef565b60405180910390fd5b819050919050565b60006bffffffffffffffffffffffff801682111561052e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052590610faf565b60405180910390fd5b819050919050565b600067ffffffffffffffff8016821115610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c9061104f565b60405180910390fd5b819050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80168211156105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e79061106f565b60405180910390fd5b819050919050565b60006fffffffffffffffffffffffffffffffff801682111561064f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106469061100f565b60405180910390fd5b819050919050565b600061ffff80168211156106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069790610fcf565b60405180910390fd5b819050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000060030b82121580156106e45750637fffffff60030b8213155b610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071a9061108f565b60405180910390fd5b819050919050565b600063ffffffff8016821115610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d9061108f565b60405180910390fd5b819050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800060010b82121580156107b85750617fff60010b8213155b6107f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ee90610fcf565b60405180910390fd5b819050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffff800000000000000060070b821215801561083f5750677fffffffffffffff60070b8213155b61087e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108759061104f565b60405180910390fd5b819050919050565b60007fffffffffffffffffffffffffffffffff80000000000000000000000000000000600f0b82121580156108ce57506f7fffffffffffffffffffffffffffffff600f0b8213155b61090d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109049061100f565b60405180910390fd5b819050919050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82111561097a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610971906110af565b60405180910390fd5b819050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060000b82121580156109bb5750607f60000b8213155b6109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610fef565b60405180910390fd5b819050919050565b600080821215610a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3e9061102f565b60405180910390fd5b819050919050565b600081359050610a5e816112a8565b92915050565b600081359050610a73816112bf565b92915050565b600060208284031215610a8b57600080fd5b6000610a9984828501610a4f565b91505092915050565b600060208284031215610ab457600080fd5b6000610ac284828501610a64565b91505092915050565b610ad4816111b8565b82525050565b610ae3816111c5565b82525050565b610af2816111d2565b82525050565b610b01816111dc565b82525050565b610b10816111e9565b82525050565b610b1f816111f6565b82525050565b6000610b326026836111a7565b91507f53616665436173743a2076616c756520646f65736e27742066697420696e203960008301527f36206269747300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610b986026836111a7565b91507f53616665436173743a2076616c756520646f65736e27742066697420696e203160008301527f36206269747300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610bfe6025836111a7565b91507f53616665436173743a2076616c756520646f65736e27742066697420696e203860008301527f20626974730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c646027836111a7565b91507f53616665436173743a2076616c756520646f65736e27742066697420696e203160008301527f32382062697473000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610cca6020836111a7565b91507f53616665436173743a2076616c7565206d75737420626520706f7369746976656000830152602082019050919050565b6000610d0a6026836111a7565b91507f53616665436173743a2076616c756520646f65736e27742066697420696e203660008301527f34206269747300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d706027836111a7565b91507f53616665436173743a2076616c756520646f65736e27742066697420696e203260008301527f32342062697473000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610dd66026836111a7565b91507f53616665436173743a2076616c756520646f65736e27742066697420696e203360008301527f32206269747300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e3c6028836111a7565b91507f53616665436173743a2076616c756520646f65736e27742066697420696e206160008301527f6e20696e743235360000000000000000000000000000000000000000000000006020830152604082019050919050565b610e9e81611203565b82525050565b610ead8161121f565b82525050565b610ebc8161122d565b82525050565b610ecb81611255565b82525050565b610eda8161125f565b82525050565b610ee98161126f565b82525050565b610ef881611283565b82525050565b610f0781611290565b82525050565b6000602082019050610f226000830184610acb565b92915050565b6000602082019050610f3d6000830184610ada565b92915050565b6000602082019050610f586000830184610ae9565b92915050565b6000602082019050610f736000830184610af8565b92915050565b6000602082019050610f8e6000830184610b07565b92915050565b6000602082019050610fa96000830184610b16565b92915050565b60006020820190508181036000830152610fc881610b25565b9050919050565b60006020820190508181036000830152610fe881610b8b565b9050919050565b6000602082019050818103600083015261100881610bf1565b9050919050565b6000602082019050818103600083015261102881610c57565b9050919050565b6000602082019050818103600083015261104881610cbd565b9050919050565b6000602082019050818103600083015261106881610cfd565b9050919050565b6000602082019050818103600083015261108881610d63565b9050919050565b600060208201905081810360008301526110a881610dc9565b9050919050565b600060208201905081810360008301526110c881610e2f565b9050919050565b60006020820190506110e46000830184610e95565b92915050565b60006020820190506110ff6000830184610ea4565b92915050565b600060208201905061111a6000830184610eb3565b92915050565b60006020820190506111356000830184610ec2565b92915050565b60006020820190506111506000830184610ed1565b92915050565b600060208201905061116b6000830184610ee0565b92915050565b60006020820190506111866000830184610eef565b92915050565b60006020820190506111a16000830184610efe565b92915050565b600082825260208201905092915050565b600081600f0b9050919050565b60008160010b9050919050565b6000819050919050565b60008160030b9050919050565b60008160070b9050919050565b60008160000b9050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600061ffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b60006bffffffffffffffffffffffff82169050919050565b6112b1816111d2565b81146112bc57600080fd5b50565b6112c881611255565b81146112d357600080fd5b5056fea2646970667358221220efcaced5de5add85eba75dffefdd3286732875d58aa3d30d51a341d23e808c4764736f6c63430008000033";

export class SafeCastMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeCastMock> {
    return super.deploy(overrides || {}) as Promise<SafeCastMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeCastMock {
    return super.attach(address) as SafeCastMock;
  }
  connect(signer: Signer): SafeCastMock__factory {
    return super.connect(signer) as SafeCastMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeCastMockInterface {
    return new utils.Interface(_abi) as SafeCastMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeCastMock {
    return new Contract(address, _abi, signerOrProvider) as SafeCastMock;
  }
}
