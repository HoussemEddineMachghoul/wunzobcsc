/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UUPSUpgradeableUnsafeMock,
  UUPSUpgradeableUnsafeMockInterface,
} from "../UUPSUpgradeableUnsafeMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "current",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109a9806100206000396000f3fe6080604052600436106100555760003560e01c80632baeceb71461005a5780633659cfe6146100715780634f1ef2861461009a5780639fa6a6e3146100b6578063d09de08a146100e1578063d826f88f146100f8575b600080fd5b34801561006657600080fd5b5061006f61010f565b005b34801561007d57600080fd5b506100986004803603810190610093919061052e565b61011b565b005b6100b460048036038101906100af9190610557565b610139565b005b3480156100c257600080fd5b506100cb610149565b6040516100d891906107c9565b60405180910390f35b3480156100ed57600080fd5b506100f661015a565b005b34801561010457600080fd5b5061010d610166565b005b6101196000610172565b565b610136816040518060200160405280600081525060006101ce565b50565b610145828260006101ce565b5050565b600061015560006101fa565b905090565b6101646000610208565b565b610170600061021e565b565b600081600001549050600081116101be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b590610769565b60405180910390fd5b6001810382600001819055505050565b6101d78361022b565b6000825111806101e45750805b156101f5576101f3838361027a565b505b505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6000816000018190555050565b610234816102a7565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606061029f838360405180606001604052806027815260200161094d60279139610360565b905092915050565b6102b08161042d565b6102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e690610789565b60405180910390fd5b8061031c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610440565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606061036b8461042d565b6103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a1906107a9565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516103d29190610730565b600060405180830381855af49150503d806000811461040d576040519150601f19603f3d011682016040523d82523d6000602084013e610412565b606091505b509150915061042282828661044a565b925050509392505050565b600080823b905060008111915050919050565b6000819050919050565b6060831561045a578290506104aa565b60008351111561046d5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a19190610747565b60405180910390fd5b9392505050565b60006104c46104bf84610815565b6107e4565b9050828152602081018484840111156104dc57600080fd5b6104e78482856108b3565b509392505050565b6000813590506104fe81610935565b92915050565b600082601f83011261051557600080fd5b81356105258482602086016104b1565b91505092915050565b60006020828403121561054057600080fd5b600061054e848285016104ef565b91505092915050565b6000806040838503121561056a57600080fd5b6000610578858286016104ef565b925050602083013567ffffffffffffffff81111561059557600080fd5b6105a185828601610504565b9150509250929050565b60006105b682610845565b6105c0818561085b565b93506105d08185602086016108c2565b80840191505092915050565b60006105e782610850565b6105f18185610866565b93506106018185602086016108c2565b61060a81610924565b840191505092915050565b6000610622601b83610866565b91507f436f756e7465723a2064656372656d656e74206f766572666c6f7700000000006000830152602082019050919050565b6000610662602d83610866565b91507f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008301527f6f74206120636f6e7472616374000000000000000000000000000000000000006020830152604082019050919050565b60006106c8602683610866565b91507f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008301527f6e747261637400000000000000000000000000000000000000000000000000006020830152604082019050919050565b61072a816108a9565b82525050565b600061073c82846105ab565b915081905092915050565b6000602082019050818103600083015261076181846105dc565b905092915050565b6000602082019050818103600083015261078281610615565b9050919050565b600060208201905081810360008301526107a281610655565b9050919050565b600060208201905081810360008301526107c2816106bb565b9050919050565b60006020820190506107de6000830184610721565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561080b5761080a6108f5565b5b8060405250919050565b600067ffffffffffffffff8211156108305761082f6108f5565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061088282610889565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156108e05780820151818401526020810190506108c5565b838111156108ef576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61093e81610877565b811461094957600080fd5b5056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203db9de30a188d80fe63cdc96d09067217d3a43b6d1659baa6fffe5080e271af464736f6c63430008000033";

export class UUPSUpgradeableUnsafeMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UUPSUpgradeableUnsafeMock> {
    return super.deploy(overrides || {}) as Promise<UUPSUpgradeableUnsafeMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UUPSUpgradeableUnsafeMock {
    return super.attach(address) as UUPSUpgradeableUnsafeMock;
  }
  connect(signer: Signer): UUPSUpgradeableUnsafeMock__factory {
    return super.connect(signer) as UUPSUpgradeableUnsafeMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UUPSUpgradeableUnsafeMockInterface {
    return new utils.Interface(_abi) as UUPSUpgradeableUnsafeMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSUpgradeableUnsafeMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UUPSUpgradeableUnsafeMock;
  }
}
